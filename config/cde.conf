user root root;
worker_processes  1;        #nginx worker 数量
error_log logs/error.log warn;   #指定错误日志文件路径
events {
    worker_connections 1024;
}

http {
    # 对于开发研究，可以对代码 cache 进行关闭，这样不必每次都重新加载 nginx。
    lua_code_cache off;
    lua_package_path 'lua/md5/?.lua;lua/?.lua;;';
    server {
        #监听端口，若你的6699端口已经被占用，则需要修改
        listen 8888;
        location /luarocks {
            content_by_lua '
                local foo = require("foo")
                foo.say("hello, luarocks!")
            ';
        }
        location /pullstream{

            content_by_lua_block {
                ngx.say("live pullstream")
            }
        }
        location /pushstream{

            content_by_lua_block {
                ngx.say("live pushstream")
            }
        }
        location /livecde/channel{
            default_type text/plain;

            content_by_lua_block {
            }
        }
        location /livecde/on_connect{
            default_type text/plain;

            content_by_lua_block {
            }
        }
        location /livecde/on_publish{
            default_type text/plain;

            content_by_lua_block {
            }
        }
        location /livecde/on_unpublish{
            default_type text/plain;

            content_by_lua_block {
            }
        }
        location /livecde/on_close{
            default_type text/plain;

            content_by_lua_block {
            }
        }
        location ~ ^/api/([-_a-zA-Z0-9/]+) {
            # 准入阶段完成参数验证
            # access_by_lua_file /root/zhoulp/libsource/github/OpenrestyLua/lua/access_check.lua;
            #内容生成阶段
            content_by_lua_file /root/zhoulp/libsource/github/OpenrestyLua/lua/$1.lua;
        }
    }
}
